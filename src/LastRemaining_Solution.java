/**
 * Copyright (C), 2015-2019, XXX有限公司
 * FileName: LastRemaining_Solution
 * Author:   user
 * Date:     2019/5/26 15:25
 * Description: 约瑟夫环问题
 * History:
 * <author>          <time>          <version>          <desc>
 * 作者姓名           修改时间           版本号              描述
 */

/**
 * 〈一句话功能简述〉<br> 
 * 〈约瑟夫环问题〉
 *每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,
 * 今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游戏。
 * 其中,有个游戏是这样的:首先,让小朋友们围成一个大圈。
 * 然后,他随机指定一个数m,让编号为0的小朋友开始报数。
 * 每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,
 * 从他的下一个小朋友开始,继续0...m-1报数....这样下去....直到剩下最后一个小朋友,可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。
 * 请你试着想下,哪个小朋友会得到这份礼品呢？(注：小朋友的编号是从0到n-1)
 * @author user
 * @create 2019/5/26
 * @since 1.0.0
 */

import java.util.LinkedList;

/**
 * 最简单的方法就是写一个环形链表
 */

public class LastRemaining_Solution {

    public int LastRemaining_Solution(int n, int m) {
        //首先把小朋友们丢到双向链表中去
        //LinkedList竟然是双向链表，
        LinkedList<Integer> linkedList = new LinkedList<>();
        if (n==0||m==0) return -1;

        for (int i=0;i<n;i++){
            linkedList.add(i);
        }
        int bt = 0;
        while (linkedList.size()>1){
            //+多少就是这个人后面第多少个！！！
            bt=(bt+m-1)%linkedList.size();
            //淘汰他
            linkedList.remove(bt);
        }
        return linkedList.size()==1?linkedList.get(0):-1;
    }
}
